#!/usr/bin/env ruby2.0

require 'yaml'
require 'erb'
require 'fileutils'

if ARGV.empty?
  STDERR.puts "usage: #{$0} environment"
  exit 1
end

env = ARGV.shift

def install(dst)
  src = File.expand_path("../root#{dst}")
  FileUtils.cp(src, dst)
end

if env == "production"
  install("/etc/apt/apt.conf.d/20auto-upgrades")
  install("/etc/apt/apt.conf.d/50unattended-upgrades")

  system("apt-get install unattended-upgrades")
  system("service unattended-upgrades restart")
end

config_file = File.expand_path("../../config.#{env}.yml", __dir__)
config = YAML.load(File.read(config_file))


nginx_erb_path = File.expand_path("../root/etc/nginx/nginx.conf.erb", __dir__)
nginx_erb = ERB.new(File.read(nginx_erb_path), nil, "<>")

puts "Writing /etc/nginx/nginx.conf"

File.open("/etc/nginx/nginx.conf", "w") do |f|
  global_fd_limit = 65536
  num_workers = `grep processor /proc/cpuinfo | wc -l`.chomp.to_i
  worker_fd_limit = global_fd_limit / num_workers

  f.write nginx_erb.result(binding)
end


upstart_erb_path = File.expand_path("../root/etc/init/proxy.conf.erb", __dir__)
upstart_erb = ERB.new(File.read(upstart_erb_path), nil, "<>")

puts "Writing /etc/init/proxy.conf"

File.open("/etc/init/proxy.conf", "w") do |f|
  vars = config["env"]

  if env == 'production'
    home_dir = '/home/ubuntu'
  else
    home_dir = '/home/vagrant'
  end

  f.write upstart_erb.result(binding)
end

system("initctl reload-configuration")
system("service proxy start")
